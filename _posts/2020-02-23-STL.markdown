### array
array 是固定大小的顺序容器，它们保存了一个以严格的线性顺序排列的特定数量的元素。

方法|含义
-|-
begin|返回指向数组容器中第一个元素的迭代器
end|返回指向数组容器中最后一个元素之后的理论元素的迭代器
rbegin|返回指向数组容器中最后一个元素的反向迭代器
rend|返回一个反向迭代器，指向数组中第一个元素之前的理论元素
cbegin|返回指向数组容器中第一个元素的常量迭代器（const_iterator）
cend|返回指向数组容器中最后一个元素之后的理论元素的常量迭代器（const_iterator）
crbegin|返回指向数组容器中最后一个元素的常量反向迭代器（const_reverse_iterator）
crend|返回指向数组中第一个元素之前的理论元素的常量反向迭代器（const_reverse_iterator）
size|	返回数组容器中元素的数量
max_size|返回数组容器可容纳的最大元素数
empty|返回一个布尔值，指示数组容器是否为空
operator[]|返回容器中第 n（参数）个位置的元素的引用
at|返回容器中第 n（参数）个位置的元素的引用
front|返回对容器中第一个元素的引用
back|返回对容器中最后一个元素的引用
data|返回指向容器中第一个元素的指针
fill|用 val（参数）填充数组所有元素
swap|通过 x（参数）的内容交换数组的内容
get（array）|形如 std::get<0>(myarray)；传入一个数组容器，返回指定位置元素的引用
relational operators (array)|形如 arrayA > arrayB；依此比较数组每个元素的大小关系


### vector
vector 是表示可以改变大小的数组的序列容器。

方法|含义
-|-
vector|构造函数
~vector|析构函数，销毁容器对象
begin|返回指向容器中第一个元素的迭代器
end|返回指向容器中最后一个元素之后的理论元素的迭代器
rbegin|返回指向容器中最后一个元素的反向迭代器
rend|返回一个反向迭代器，指向中第一个元素之前的理论元素
size|返回容器中元素的数量
max_size|返回容器可容纳的最大元素数
resize|调整容器的大小，使其包含 n（参数）个元素
capacity|返回当前为 vector 分配的存储空间（容量）的大小
empty|返回 vector 是否为空
operator[]|返回容器中第 n（参数）个位置的元素的引用
at|返回容器中第 n（参数）个位置的元素的引用
front|返回对容器中第一个元素的引用
back|返回对容器中最后一个元素的引用
push_back|在容器的最后一个元素之后添加一个新元素
pop_back|删除容器中的最后一个元素，有效地将容器 size 减少一个
insert|通过在指定位置的元素之前插入新元素来扩展该容器，通过插入元素的数量有效地增加容器大小
erase|从 vector 中删除单个元素（position）或一系列元素（[first，last)），这有效地减少了被去除的元素的数量，从而破坏了容器的大小
swap|通过 x（参数）的内容交换容器的内容，x 是另一个类型相同、size 可能不同的 vector 对象
clear|从 vector 中删除所有的元素（被销毁），留下 size 为 0 的容器
swap(vector)|容器 x（参数）的内容与容器 y（参数）的内容交换。两个容器对象都必须是相同的类型（相同的模板参数），尽管大小可能不同


### stack（栈）
stack 是一种容器适配器，用于在LIFO（后进先出）的操作，其中元素仅从容器的一端插入和提取。

方法|含义
-|-
push(item)|将item压入栈顶  
pop()|删除栈顶的元素，但不会返回  
top()|返回栈顶的元素，但不会删除  
size()|返回栈中元素的个数  
empty()|检查栈是否为空，如果为空返回true，否则返回false   

### queue（队列）
queue 是一种容器适配器，用于在FIFO（先入先出）的操作，其中元素插入到容器的一端并从另一端提取。

方法|含义
-|-
push(item)|将item压入队列尾部  
pop()|删除队首元素，但不返回  
front()|返回队首元素，但不删除  
back()|返回队尾元素，但不删除  
size()|返回队列中元素的个数  
empty()|检查队列是否为空，如果为空返回true，否则返回false  

### map（哈希表）
map 是关联容器，按照特定顺序存储由 key value (键值) 和 mapped value (映射值) 组合形成的元素。

方法|含义
-|-
begin|返回引用容器中第一个元素的迭代器
key_comp|返回容器用于比较键的比较对象的副本
value_comp|返回可用于比较两个元素的比较对象，以获取第一个元素的键是否在第二个元素之前
find|在容器中搜索具有等于 k（参数）的键的元素，如果找到则返回一个迭代器，否则返回 map::end 的迭代器
count|在容器中搜索具有等于 k（参数）的键的元素，并返回匹配的数量
